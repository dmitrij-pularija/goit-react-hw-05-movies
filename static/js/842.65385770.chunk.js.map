{"version":3,"file":"static/js/842.65385770.chunk.js","mappings":"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","sources":["components/Home/Home.jsx","components/MoviesGallery/MoviesGallery.styled.js","components/MoviesGallery/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","webpack://goit-react-hw-05-movies/./src/components/PaginationBlock/PaginationBlock.module.css?77d0","components/PaginationBlock/PaginationBlock.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { memo, useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PaginationBlock from '../PaginationBlock/PaginationBlock';\nimport MoviesGallery from '../MoviesGallery/MoviesGallery';\nimport Notification from '../Notification/Notification';\nimport Loader from '../Loader/Loader';\nimport { useQuery } from '../../services/hooks';\n\nconst Home = ({ genres }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const getPage = Number(searchParams.get('page'));\n  const [movies, setMovie] = useState([]);\n  const [pages, setPages] = useState(0);\n  const page = getPage ? getPage : 1;\n  const {\n    state: { loading, error },\n    data,\n    dataQuery,\n  } = useQuery();\n\n  useEffect(() => {\n    dataQuery('trending', page, '');\n  }, [page, dataQuery]);\n\n  useEffect(() => {\n    const { results, total_pages } = data;\n    if (total_pages) {\n      const genresName = genre_ids =>\n        genres.reduce((array, genre) => {\n          genre_ids.includes(Number(genre.id)) && array.push(genre.name);\n          return array;\n        }, []);\n      setPages(total_pages);\n      setMovie(\n        results.map(movie => ({\n          id: movie.id,\n          poster: movie.poster_path,\n          title: movie.title,\n          release_date: movie.release_date,\n          genres: genresName(movie.genre_ids),\n          vote_average: movie.vote_average,\n        }))\n      );\n    }\n  }, [data, genres]);\n\n  const pagination = nextPage => {\n    setMovie([]);\n    setSearchParams({ page: nextPage });\n  };\n\n  return (\n    <>\n      {loading && <Loader />}\n      {movies.length && !loading && <MoviesGallery movies={movies} />}\n      {movies.length && !loading && (\n        <PaginationBlock\n          onPagination={pagination}\n          total={pages}\n          curent={page}\n        />\n      )}\n      {!movies.length && !loading && (\n        <Notification\n          message={\n            error\n              ? 'Something went wrong, please try again.'\n              : 'Movies not found'\n          }\n        />\n      )}\n    </>\n  );\n};\n\nHome.propTypes = {\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default memo(Home);","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Gallery = styled.ul`\n  width: 100%;\n  margin-top: 75px;\n  padding: 0;\n  display: grid;\n  grid-template-columns: repeat(1, 1fr);\n\n  grid-auto-rows: auto-fit;\n  grid-gap: 15px;\n  justify-content: center;\n\n  @media screen and (min-width: 372px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media screen and (min-width: 729px) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  @media screen and (min-width: 1101px) {\n    grid-template-columns: repeat(5, 1fr);\n  }\n`;\n\nexport const GalleryItem = styled.li`\n  position: relative;\n  display: block;\n  width: 100%;\n  overflow: hidden;\n\n  border-radius: 5px;\n  transition: transform cubic-bezier(0.4, 0, 0.2, 1) 250ms;\n\n  &:hover {\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n    transform: scale(1.05);\n    cursor: zoom-in;\n  }\n`;\n\nexport const Url = styled(Link)`\n  height: 100%;\n  width: 100%;\n  text-decoration: none;\n`;\n\nexport const Image = styled.img`\n  height: 89%;\n  width: 100%;\n  object-fit: cover;\n  border-radius: 5px 5px 0 0;\n`;\nexport const Name = styled.div`\n  position: absolute;\n  bottom: 50px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-weight: 700;\n  font-size: 18px;\n  color: #ffffff;\n  text-align: center;\n  line-height: 1.1;\n`;\n\nexport const Title = styled.div`\n  width: 100%;\n  height: 11%;\n  padding: 0px 2px 3px 2px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Year = styled.span`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  margin: auto 5px auto 0;\n  font-size: 20px;\n  font-weight: 700;\n  color: #3575f5;\n`;\n\nexport const Genre = styled.span`\n  width: 100%;\n  padding: 0;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  font-size: 14px;\n  line-height: 1;\n  color: #0294fc;\n`;\n\nexport const Reyt = styled.span`\n  border-radius: 5px;\n  padding: 2px 5px;\n  margin: auto 0;\n  font-weight: 700;\n  line-height: 1;\n  font-size: 22px;\n  color: #ffffff;\n  background-color: #3575f5;\n`;","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  GalleryItem,\n  Url,\n  Image,\n  Title,\n  Reyt,\n  Year,\n  Genre,\n  Name,\n} from './MoviesGallery.styled';\nimport noPoster from '../../img/unknown.jpg';\n\nconst MoviesGalleryItem = ({ path, src, alt, year, genres, reyt }) => {\n  const location = useLocation();\n  let mapGenres = [];\n  const cut = (genres, index) => {\n    if (index > 0 && index < 3) return ', ' + genres;\n    if (index === 0) return genres;\n  };\n  if (genres) {\n    mapGenres = genres.map((genres, index) => cut(genres, index));\n  }\n\n  return (\n    <GalleryItem>\n      <Url to={path} state={{ from: location }}>\n        <Image\n          src={src ? `https://image.tmdb.org/t/p/w342${src}` : noPoster}\n          alt={alt}\n          loading=\"lazy\"\n        />\n        {!src && <Name>{alt}</Name>}\n        <Title>\n          <Year>{year}</Year>\n          <Genre>{mapGenres && mapGenres}</Genre>\n          {reyt > 0 && <Reyt>{reyt}</Reyt>}\n        </Title>\n      </Url>\n    </GalleryItem>\n  );\n};\n\nMoviesGalleryItem.propTypes = {\n  path: PropTypes.string,\n  src: PropTypes.string,\n  alt: PropTypes.string,\n  year: PropTypes.string,\n  reyt: PropTypes.string,\n  genres: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default MoviesGalleryItem;","import PropTypes from 'prop-types';\nimport MoviesGalleryItem from './MoviesGalleryItem';\nimport { Gallery } from './MoviesGallery.styled';\n\nconst MoviesGallery = ({ movies }) => {\n  return (\n    <Gallery>\n      {movies.map(\n        ({ id, poster, title, release_date, genres, vote_average }) => (\n          <MoviesGalleryItem\n            key={id}\n            path={'/movies/' + id}\n            src={poster}\n            alt={title}\n            year={release_date ? release_date.substr(0, 4) : '    '}\n            genres={genres}\n            reyt={vote_average.toFixed(1)}\n          />\n        )\n      )}\n    </Gallery>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster: PropTypes.string,\n      release_date: PropTypes.string,\n      vote_average: PropTypes.number,\n      genres: PropTypes.arrayOf(PropTypes.string),\n    })\n  ).isRequired,\n};\nexport default MoviesGallery;","import styled from 'styled-components';\n\nexport const Message = styled.p`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: auto 0;\n  font-size: 24px;\n  color: red;\n  padding-top: 15px;\n\n  @media screen and (min-width: 480px) {\n    height: 100px;\n    padding: 0;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Message } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return <Message>{message}</Message>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;","// extracted by mini-css-extract-plugin\nexport default {\"block\":\"PaginationBlock_block__QCtjq\"};","import Pagination from 'react-bootstrap/Pagination';\nimport css from './PaginationBlock.module.css';\nimport PropTypes from 'prop-types';\n\nconst Buttons = ({ total, curent, onPagination }) => {\n  let items = [];\n  let nextPage = curent;\n\n  if (curent !== 1 && total > 9) items.push(<Pagination.Prev key=\"n1\" />);\n  for (let number = 1; number <= total; number++) {\n    items.push(\n      total <= 8 && (\n        <Pagination.Item key={number} active={number === curent}>\n          {number}\n        </Pagination.Item>\n      ),\n      total > 8 && curent > 4 && number === 1 && (\n        <Pagination.Item key={number} active={number === curent}>\n          {number}\n        </Pagination.Item>\n      ),\n      total > 8 && curent === 1 && number <= 6 && (\n        <Pagination.Item key={number} active={number === curent}>\n          {number}\n        </Pagination.Item>\n      ),\n      total > 8 && curent > 4 && number === 2 && (\n        <Pagination.Ellipsis disabled key=\"e1\" />\n      ),\n      total > 8 && curent <= 4 && number <= 5 && curent !== 1 && (\n        <Pagination.Item key={number} active={number === curent}>\n          {number}\n        </Pagination.Item>\n      ),\n      total > 8 && curent === total && number >= total - 5 && (\n        <Pagination.Item key={number} active={number === curent}>\n          {number}\n        </Pagination.Item>\n      ),\n      total > 8 &&\n        curent >= total - 4 &&\n        number >= total - 4 &&\n        curent !== total && (\n          <Pagination.Item key={number} active={number === curent}>\n            {number}\n          </Pagination.Item>\n        ),\n      total > 8 &&\n        curent > 4 &&\n        curent < total - 4 &&\n        number > curent - 2 &&\n        number < curent + 2 && (\n          <Pagination.Item key={number} active={number === curent}>\n            {number}\n          </Pagination.Item>\n        ),\n      total > 8 && curent < total - 4 && number === total - 1 && (\n        <Pagination.Ellipsis disabled key=\"e2\" />\n      ),\n      total > 8 && curent < total - 4 && number === total && (\n        <Pagination.Item key={number} active={number === curent}>\n          {number}\n        </Pagination.Item>\n      )\n    );\n  }\n  if (curent !== total && total > 9) items.push(<Pagination.Next key=\"n2\" />);\n\n  const getPageNumber = event => {\n    let {\n      target: { text },\n    } = event;\n    if (!text) text = event.target.innerHTML;\n    if (text.includes('…')) return;\n    if (Number.isInteger(Number(text))) nextPage = Number(text);\n    if (text.includes('›')) ++nextPage;\n    if (text.includes('‹')) --nextPage;\n    onPagination(nextPage);\n  };\n\n  return (\n    <div className={css.block}>\n      <Pagination onClick={event => getPageNumber(event)}>{items}</Pagination>\n    </div>\n  );\n};\n\nButtons.propTypes = {\n  total: PropTypes.number.isRequired,\n  curent: PropTypes.number.isRequired,\n  onPagination: PropTypes.func.isRequired,\n};\n\nexport default Buttons;"],"names":["Home","genres","useSearchParams","searchParams","setSearchParams","getPage","Number","get","useState","movies","setMovie","pages","setPages","page","useQuery","state","loading","error","data","dataQuery","useEffect","results","total_pages","map","movie","id","poster","poster_path","title","release_date","genre_ids","reduce","array","genre","includes","push","name","vote_average","length","onPagination","nextPage","total","curent","message","memo","Gallery","styled","GalleryItem","Url","Link","Image","Name","Title","Year","Genre","Reyt","path","src","alt","year","reyt","location","useLocation","mapGenres","index","cut","to","from","noPoster","substr","toFixed","Message","items","Pagination","number","active","disabled","className","css","onClick","event","text","target","innerHTML","isInteger","getPageNumber"],"sourceRoot":""}